package love.distributedrebirth.numberxd.glyph;

import java.text.DecimalFormat;

import love.distributedrebirth.bassboonyd.B√£√üB»ç≈ënAuthorInfo ∏·¥∞;
import love.distributedrebirth.bassboonyd.B√£√üB»ç≈ënClassInfo ∏·¥∞;
import love.distributedrebirth.bassboonyd.B√£√üB»ç≈ënCoffinOpen ∏·¥∞;
import love.distributedrebirth.bassboonyd.B√£√üB»ç≈ënCoffin ∏·¥∞;
import love.distributedrebirth.bassboonyd.B√£√üB»ç≈ënConstants ∏·¥∞;
import love.distributedrebirth.bassboonyd.B√£√üB»ç≈ënPackageInfo ∏·¥∞;
import love.distributedrebirth.bassboonyd.jmx.DefaultEnumSet·¥∂·¥πÀ£;
import love.distributedrebirth.bassboonyd.jmx.GuageCounter·¥∂·¥πÀ£;
import love.distributedrebirth.numberxd.base2t.part.T10PartDecimal;
import love.distributedrebirth.numberxd.base2t.part.T16PartHex;

@B√£√üB»ç≈ënAuthorInfo ∏·¥∞(name = "willemtsade", copyright = "¬©Œî‚àû ‰ªô‰∏ä‰∏ªÂ§©")
@B√£√üB»ç≈ënClassInfo ∏·¥∞(name = "BaseGlyphSet", purpose = "The encoded base scripts.")
@B√£√üB»ç≈ënPackageInfo ∏·¥∞(name = "love.distributedrebirth.numberxd")
public enum BaseGlyphSet implements DefaultEnumSet·¥∂·¥πÀ£<BaseGlyphSet,B√£√üB»ç≈ënGlyphSetKey ∏·¥∞> {
	
	LATIN_BASIC(
			new BaseGlyphSetNumber(v -> T10PartDecimal.PART_1.B√£√üVoorElk(x -> v.add(Integer.toString(x.B»ç≈ënRangTelNul())))),
			new BaseGlyphSetNumber(v -> T16PartHex.PART_1.B√£√üVoorElk(x -> v.add(x.B»ç≈ënAlt1Value()))),
			new BaseGlyphSetNumber("1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R")),
	LATIN_DTMF(
			new BaseGlyphSetNumber(v -> T10PartDecimal.PART_1.B√£√üVoorElk(x -> v.add(x.B»ç≈ënChinaValue()))).withSeperator(B√£√üB»ç≈ënConstants ∏·¥∞.STR_SPACE),
			new BaseGlyphSetNumber("1","2","3","A","4","5","6","B","7","8","9","C","*","0","#","D"),
			null),
	LATIN_TOP(
			new BaseGlyphSetNumber("‚Å∞","¬π","¬≤","¬≥","‚Å¥","‚Åµ","‚Å∂","‚Å∑","‚Å∏","‚Åπ"),
			new BaseGlyphSetNumber("‚Å∞","¬π","¬≤","¬≥","‚Å¥","‚Åµ","‚Å∂","‚Å∑","‚Å∏","‚Åπ","·µÉ","·µá","·∂ú","·µà","·µâ","·∂†"),
			new BaseGlyphSetNumber("¬π","¬≤","¬≥","‚Å¥","‚Åµ","‚Å∂","‚Å∑","‚Å∏","‚Åπ","·µÉ","·µá","·∂ú","·µà","·µâ","·∂†","·¥≥","·¥¥","·¥µ","·¥∂","·¥∑","·¥∏","·¥π","·¥∫","·¥º","·¥æ","Q","·¥ø")),
	LATIN_SUB(
			new BaseGlyphSetNumber("‚ÇÄ","‚ÇÅ","‚ÇÇ","‚ÇÉ","‚ÇÑ","‚ÇÖ","‚ÇÜ","‚Çá","‚Çà","‚Çâ"),
			new BaseGlyphSetNumber("‚ÇÄ","‚ÇÅ","‚ÇÇ","‚ÇÉ","‚ÇÑ","‚ÇÖ","‚ÇÜ","‚Çá","‚Çà","‚Çâ","‚Çê","‚ÇÜ","ÍúÄ","‚Çî","‚Çë","’¢"),
			new BaseGlyphSetNumber("‚ÇÅ","‚ÇÇ","‚ÇÉ","‚ÇÑ","‚ÇÖ","‚ÇÜ","‚Çá","‚Çà","‚Çâ","‚Çê","‚ÇÜ","ÍúÄ","‚Çî","‚Çë","’¢","G","‚Çï","·µ¢","‚±º","‚Çñ","‚Çó","‚Çò","‚Çô","‚Çí","‚Çö","Q","·µ£")),
	LATIN_TOPHEX(
			LATIN_BASIC.B»ç≈ënNumber10(),
			LATIN_BASIC.B»ç≈ënNumber16().withAltGlyphSet(LATIN_TOP),
			null),
	LATIN_SUBHEX(
			LATIN_BASIC.B»ç≈ënNumber10(),
			LATIN_BASIC.B»ç≈ënNumber16().withAltGlyphSet(LATIN_SUB),
			null),
	
	TONE_SCRIPT(
			new BaseGlyphSetNumber(v -> T10PartDecimal.PART_1.B√£√üVoorElk(x -> v.add(x.B»ç≈ënDialTone()))),
			new BaseGlyphSetNumber(v -> T16PartHex.PART_1.B√£√üVoorElk(x -> v.add(x.B»ç≈ënDialTone()))),
			new BaseGlyphSetNumber("ÍúäÍúà","ÍúäÍúâ","ÍúäÍúã","ÍúäÍúå","ÍúäÍúç","ÍúäÍúé","ÍúäÍúè","ÍúäÍúê","ÍúäÍúë","ÀßÀ•","ÀßÀ¶","ÀßÀ®","ÀßÀ©","ÀßÍúí","ÀßÍúì","ÀßÍúî","ÀßÍúï","ÀßÍúñ","ÍúèÀ•","ÍúèÀ¶","ÍúèÀß","ÍúèÀ®","ÍúèÀ©","ÍúèÍúç","ÍúèÍúé","ÍúèÍúê","ÍúèÍúë")),
	DIPAVALI_LRPATH_TOPHEX(
			new BaseGlyphSetNumber(v -> T10PartDecimal.PART_1.B√£√üVoorElk(x -> v.add(x.B»ç≈ënAlt1Value()))),
			new BaseGlyphSetNumber("ÀßÀ•À©","ÀßÀ©À•","ÀßÀ•À¶","ÀßÀ©À®","ÀßÀ¶À¶","ÀßÀ®À®","ÀßÀ•À•","ÀßÀ©À©","À•À©Àß","À©À•Àß","À•À¶Àß","À©À®Àß","À¶À¶Àß","À®À®Àß","À•À•Àß","À©À©Àß").withAltGlyphSet(BaseGlyphSet.LATIN_TOP),
			TONE_SCRIPT.B»ç≈ënNumber27()),
	DIPAVALI_LRPATH_SUBHEX(
			new BaseGlyphSetNumber(v -> T10PartDecimal.PART_1.B√£√üVoorElk(x -> v.add(x.B»ç≈ënAlt1Value()))),
			new BaseGlyphSetNumber("ÀßÀ•À©","ÀßÀ©À•","ÀßÀ•À¶","ÀßÀ©À®","ÀßÀ¶À¶","ÀßÀ®À®","ÀßÀ•À•","ÀßÀ©À©","À•À©Àß","À©À•Àß","À•À¶Àß","À©À®Àß","À¶À¶Àß","À®À®Àß","À•À•Àß","À©À©Àß").withAltGlyphSet(BaseGlyphSet.LATIN_SUB),
			TONE_SCRIPT.B»ç≈ënNumber27()),
	DIPAVALI_RLPATH_TOPHEX(
			new BaseGlyphSetNumber(v -> T10PartDecimal.PART_1.B√£√üVoorElk(x -> v.add(x.B»ç≈ënAlt2Value()))),
			new BaseGlyphSetNumber("ÍúîÍúíÍúñ","ÍúîÍúñÍúí","ÍúîÍúíÍúì","ÍúîÍúñÍúï","ÍúîÍúìÍúì","ÍúîÍúïÍúï","ÍúîÍúíÍúí","ÍúîÍúñÍúñ","ÍúíÍúñÍúî","ÍúñÍúíÍúî","ÍúíÍúìÍúî","ÍúñÍúïÍúî","ÍúìÍúìÍúî","ÍúïÍúïÍúî","ÍúíÍúíÍúî","ÍúñÍúñÍúî").withAltGlyphSet(BaseGlyphSet.LATIN_TOP),
			TONE_SCRIPT.B»ç≈ënNumber27()),
	DIPAVALI_RLPATH_SUBHEX(
			new BaseGlyphSetNumber(v -> T10PartDecimal.PART_1.B√£√üVoorElk(x -> v.add(x.B»ç≈ënAlt2Value()))),
			new BaseGlyphSetNumber("ÍúîÍúíÍúñ","ÍúîÍúñÍúí","ÍúîÍúíÍúì","ÍúîÍúñÍúï","ÍúîÍúìÍúì","ÍúîÍúïÍúï","ÍúîÍúíÍúí","ÍúîÍúñÍúñ","ÍúíÍúñÍúî","ÍúñÍúíÍúî","ÍúíÍúìÍúî","ÍúñÍúïÍúî","ÍúìÍúìÍúî","ÍúïÍúïÍúî","ÍúíÍúíÍúî","ÍúñÍúñÍúî").withAltGlyphSet(BaseGlyphSet.LATIN_SUB),
			TONE_SCRIPT.B»ç≈ënNumber27()),
	
	GREEK(
			new BaseGlyphSetNumber("≈ç","Œ±","Œ≤","Œ≥","Œ¥","Œµ","œù","Œ∂","Œ∑","Œ∏"),
			new BaseGlyphSetNumber("≈ç","Œ±","Œ≤","Œ≥","Œ¥","Œµ","œù","Œ∂","Œ∑","Œ∏","Œπ","Œ∫","Œª","Œº","ŒΩ","Œæ"),
			new BaseGlyphSetNumber("Œ±","Œ≤","Œ≥","Œ¥","Œµ","œù","Œ∂","Œ∑","Œ∏","Œπ","Œ∫","Œª","Œº","ŒΩ","Œæ","Œø","œÄ","œü","œÅ","œÉ","œÑ","œÖ","œÜ","œá","œà","œâ","œ°")),
	BENGALI(
			new BaseGlyphSetNumber("‡ß¶","‡ßß","‡ß®","‡ß©","‡ß™","‡ß´","‡ß¨","‡ß≠","‡ßÆ","‡ßØ"),
			new BaseGlyphSetNumber("‡ß¶","‡ßß","‡ß®","‡ß©","‡ß™","‡ß´","‡ß¨","‡ß≠","‡ßÆ","‡ßØ","‡¶ú‡ßç‡¶û","‡¶ï‡ßç‡¶∑","‡¶π","‡¶∏","‡¶∑","‡¶∂"),
			new BaseGlyphSetNumber("‡¶ï","‡¶ñ","‡¶ó","‡¶ò","‡¶ô","‡¶ö","‡¶õ","‡¶ú","‡¶ù","‡¶û","‡¶ü","‡¶†","‡¶°","‡¶¢","‡¶£","‡¶§","‡¶•","‡¶¶","‡¶ß","‡¶®","‡¶™","‡¶´","‡¶¨","‡¶≠","‡¶Æ","‡¶Ø","‡¶∞")),
	KANNADA(
			new BaseGlyphSetNumber("‡≥¶","‡≥ß","‡≥®","‡≥©","‡≥™","‡≥´","‡≥¨","‡≥≠","‡≥Æ","‡≥Ø"),
			new BaseGlyphSetNumber("‡≥¶","‡≥ß","‡≥®","‡≥©","‡≥™","‡≥´","‡≥¨","‡≥≠","‡≥Æ","‡≥Ø","‡≤ï","‡≤ñ","‡≤ó","‡≤ò","‡≤ô","‡≤ö"),
			new BaseGlyphSetNumber("‡≤ï","‡≤ñ","‡≤ó","‡≤ò","‡≤ô","‡≤ö","‡≤õ","‡≤ú","‡≤ù","‡≤û","‡≤ü","‡≤†","‡≤°","‡≤¢","‡≤£","‡≤§","‡≤•","‡≤¶","‡≤ß","‡≤®","‡≤™","‡≤´","‡≤¨","‡≤≠","‡≤Æ","‡≤Ø","‡≤∞")),
	MALAYALAM(
			new BaseGlyphSetNumber("‡µ¶","‡µß","‡µ®","‡µ©","‡µ™","‡µ´","‡µ¨","‡µ≠","‡µÆ","‡µØ"),
			new BaseGlyphSetNumber("‡µ¶","‡µß","‡µ®","‡µ©","‡µ™","‡µ´","‡µ¨","‡µ≠","‡µÆ","‡µØ","‡µ∞","‡µ±","‡µ≤","‡µ≥","‡µ¥","‡µµ"),
			new BaseGlyphSetNumber("‡¥ï","‡¥ñ","‡¥ó","‡¥ò","‡¥ô","‡¥ö","‡¥õ","‡¥ú","‡¥ù","‡¥û","‡¥ü","‡¥†","‡¥°","‡¥¢","‡¥£","‡¥§","‡¥•","‡¥¶","‡¥ß","‡¥®","‡¥™","‡¥´","‡¥¨","‡¥≠","‡¥Æ","‡µº","‡µø")),
	THAI(
			new BaseGlyphSetNumber("‡πê","‡πë","‡πí","‡πì","‡πî","‡πï","‡πñ","‡πó","‡πò","‡πô"),
			new BaseGlyphSetNumber("‡πê","‡πë","‡πí","‡πì","‡πî","‡πï","‡πñ","‡πó","‡πò","‡πô","‡∏Å","‡∏Ç","‡∏Ñ","‡∏Ü","‡∏á","‡∏à"),
			new BaseGlyphSetNumber("‡πë","‡πí","‡πì","‡πî","‡πï","‡πñ","‡πó","‡πò","‡πô","‡∏Å","‡∏Ç","‡∏Ñ","‡∏Ü","‡∏á","‡∏à","‡∏â","‡∏ä","‡∏å","‡∏ç","‡∏é","‡∏ê","‡∏ë","‡∏í","‡∏ì","‡∏î","‡∏ó","‡∏ò")),
	/* TODO: Brahmi is U+11000‚ÄìU+1107F and thus unsupported by ImGui 
	BRAHMI(
			new BaseGlyphSetNumber("ëÅ¶","ëÅß","ëÅ®","ëÅ©","ëÅ™","ëÅ´","ëÅ¨","ëÅ≠","ëÅÆ","ëÅØ"), 
			new BaseGlyphSetNumber("ëÄÆ","ëÄØ","ëÄ∞","ëÄ±","ëÄÆëÄ∫","ëÄØëÄ∫","ëÄ∞ëÄ∫","ëÄ±ëÄ∫","ëÄÆëÄΩ","ëÄØëÄΩ","ëÄ∞ëÄΩ","ëÄ±ëÄΩ","ëÄÆëÅÑ","ëÄØëÅÑ","ëÄ∞ëÅÑ","ëÄ±ëÅÑ"),
			new BaseGlyphSetNumber("ëÄìëÅÜ","ëÄîëÅÜ","ëÄïëÅÜ","ëÄñëÅÜ","ëÄóëÅÜ","ëÄòëÅÜ","ëÄôëÅÜ","ëÄöëÅÜ","ëÄõëÅÜ","ëÄúëÅÜ","ëÄùëÅÜ","ëÄûëÅÜ","ëÄüëÅÜ","ëÄ†ëÅÜ","ëÄ°ëÅÜ","ëÄ¢ëÅÜ","ëÄ£ëÅÜ","ëÄ§ëÅÜ","ëÄ•ëÅÜ","ëÄ¶ëÅÜ","ëÄßëÅÜ","ëÄ®ëÅÜ","ëÄ©ëÅÜ","ëÄ™ëÅÜ","ëÄ´ëÅÜ","ëÄ¨ëÅÜ","ëÄ≠ëÅÜ")),
	*/
	/* TODO: Egyptian hieroglyphs should be mapped 0x13000 to 0x1342E but for now on 0xE000 to 0xE42E (BMP) */
	HIERO(
			new BaseGlyphSetNumber("\ue429","\ue3fa","\ue3fb","\ue3fc","\ue3fd","\ue3fe","\ue3ff","\ue400","\ue401","\ue401").withSeperator(B√£√üB»ç≈ënConstants ∏·¥∞.STR_SPACE),
			new BaseGlyphSetNumber("\ue254","\ue255","\ue256","\ue257","\ue258","\ue259","\ue25a","\ue25b","\ue25c","\ue25d","\ue25e","\ue25f","\ue260","\ue261","\ue262","\ue263").withSeperator(B√£√üB»ç≈ënConstants ∏·¥∞.STR_SPACE),
			new BaseGlyphSetNumber(
					"\ue3fa","\ue3fb","\ue3fc","\ue3fd","\ue3fe","\ue3ff","\ue400","\ue401","\ue401",
					"\ue386","\ue387","\ue388","\ue389","\ue38a","\ue38b","\ue38c","\ue38d","\ue38e",
					"\ue362","\ue363","\ue364","\ue365","\ue366","\ue367","\ue368","\ue369","\ue36a").withSeperator(B√£√üB»ç≈ënConstants ∏·¥∞.STR_SPACE)
			),
	RUNIC(
			new BaseGlyphSetNumber("·õ∞","·ö†","·ö¢","·ö¶","·ö¨","·ö±","·ö¥","·öº","·öæ","·õÅ"),
			new BaseGlyphSetNumber("·õ∞","·ö†","·ö¢","·ö¶","·ö¨","·ö±","·ö¥","·öº","·öæ","·õÅ","·õÖ","·õã","·õè","·õí","·õö","·õò"),
			new BaseGlyphSetNumber("·ö†","·ö¢","·ö¶","·ö®","·ö±","·ö≤","·ö∑","·öπ","·ö∫","·öæ","·õÅ","·õÉ","·õá","·õà","·õâ","·õä","·õè","·õí","·õñ","·õó","·õö","·õú","·õü","·õû","·ö°","·ö§","·öß")),
	KOREAN(
			new BaseGlyphSetNumber("ÏòÅ","Ïùº","Ïù¥","ÏÇº","ÏÇ¨","Ïò§","Ïú°","Ïπ†","Ìåî","Íµ¨"),
			new BaseGlyphSetNumber("„Öè","„Öê","„Öë","„Öí","„Öì","„Öî","„Öï","„Öñ","„Öó","„Öò","„Öô","„Öö","„Öõ","„Öú","„Öù","„Öû"),
			new BaseGlyphSetNumber("„Ñ±","„Ñ≤","„Ñ¥","„Ñ∑","„Ñ∏","„Ñπ","„ÖÅ","„ÖÇ","„ÖÉ","„ÖÖ","„ÖÜ","„Öà","„Öâ","„Öä","„Öã","„Öå","„Öç","„Öé","„Ñµ","„Ñ∂","„Ñ∫","„Ñª","„Ñº","„ÑΩ","„Ñæ","„Ñø","„ÖÄ")),
	
	CHINA(
			new BaseGlyphSetNumber("Èõ∂","‰∏Ä","‰∫å","‰∏â","Âõõ","‰∫î","ÂÖ≠","‰∏É","ÂÖ´","‰πù"),
			null,
			null),
	CHINA_FORMAL(
			new BaseGlyphSetNumber(v -> T10PartDecimal.PART_1.B√£√üVoorElk(x -> v.add(x.B»ç≈ënChinaKey()))),
			null,
			null),
	CHINA_FORMAL_OLD(
			new BaseGlyphSetNumber("Èõ∂","Â£π","Ë≤≥","ÂèÉ","ËÇÜ","‰ºç","Èô∏","Êüí","Êçå","Áéñ"),
			null,
			null),
	JAPAN(
			CHINA.B»ç≈ënNumber10(),
			null,
			null),
	JAPAN_FORMAL(
			new BaseGlyphSetNumber("Èõ∂","Â£±","Âºê","ÂèÇ","Âõõ","‰∫î","ÂÖ≠","‰∏É","ÂÖ´","‰πù"),
			null,
			null),
	
	CYRILLIC(
			new BaseGlyphSetNumber("–§","–ê","–í","–ì","–î","–Ñ","–Ö","–ó","–ò","—≤"),
			new BaseGlyphSetNumber("–§","–ê","–í","–ì","–î","–Ñ","–Ö","–ó","–ò","—≤","–Ü","–ö","–õ","–ú","–ù","—Æ"),
			new BaseGlyphSetNumber("–ê","–í","–ì","–î","–Ñ","–Ö","–ó","–ò","—≤","–Ü","–ö","–õ","–ú","–ù","—Æ","—∫","–ü","–ß","–†","–°","–¢","—¥","–§","–•","—∞","—æ","–¶")),
	ARABIC(
			new BaseGlyphSetNumber("Ÿ†","Ÿ°","Ÿ¢","Ÿ£","Ÿ§","Ÿ•","Ÿ¶","Ÿß","Ÿ®","Ÿ©"),
			null,
			new BaseGlyphSetNumber("ÿß","ÿ®","ÿ¨","ÿØ","Ÿá","Ÿà","ÿ≤","ÿ≠","ÿ∑","Ÿä","ŸÉ","ŸÑ","ŸÖ","ŸÜ","ÿ≥","ÿπ","ŸÅ","ÿµ","ŸÇ","ÿ±","ÿ¥","ÿ™","ÿ´","ÿÆ","ÿ∞","ÿ∂","ÿ∏"),
			true),
	HEBREW(
			new BaseGlyphSetNumber("◊ê÷∂◊§÷∂◊°","◊ê÷∂◊ó÷∏◊ì","◊©÷∞◊Å◊™÷∑÷º◊ô÷¥◊ù","◊©÷∞◊Å◊ú÷π◊©÷∏◊Å◊î","◊ê÷∑◊®÷∞◊ë÷∑÷º◊¢‚Äé","◊ó÷≤◊û÷¥◊©÷∏÷º◊Å◊î‚Äé","◊©÷µ◊Å◊©◊Å‚Äé","◊©÷¥◊Å◊ë÷∞◊¢÷∏◊î","◊©÷∞◊Å◊û◊ï÷π◊†÷∂◊î","◊™÷¥÷º◊©÷∞◊Å◊¢÷∏◊î‚Äé").withSeperator(B√£√üB»ç≈ënConstants ∏·¥∞.STR_SPACE),
			null,
			new BaseGlyphSetNumber("◊ê","◊ë","◊í","◊ì","◊î","◊ï","◊ñ","◊ó","◊ò","◊ô","◊õ","◊ú","◊û","◊†","◊°","◊¢","◊§","◊¶","◊ß","◊®","◊©","◊™","◊ö","◊ù","◊ü","◊£","◊•"),
			true),
	;
	
	private final GuageCounter·¥∂·¥πÀ£ printNumber10Count;
	private final GuageCounter·¥∂·¥πÀ£ printNumber16Count;
	private final GuageCounter·¥∂·¥πÀ£ printNumber27Count;
	private final B√£√üB»ç≈ënCoffinOpen ∏·¥∞<B√£√üB»ç≈ënGlyphSetKey ∏·¥∞> BBC = B√£√üB»ç≈ënCoffinOpen ∏·¥∞.newInstance();
	public B√£√üB»ç≈ënCoffin ∏·¥∞<B√£√üB»ç≈ënGlyphSetKey ∏·¥∞> GET_BBC() { return BBC; }
	public static int LENGTH() { return values().length; };

	private BaseGlyphSet(BaseGlyphSetNumber numbers) {
		this(numbers, null, null);
	}
	
	private BaseGlyphSet(BaseGlyphSetNumber numbers, BaseGlyphSetNumber hex, BaseGlyphSetNumber gematria) {
		this(numbers, hex, gematria, false);
	}
	
	private BaseGlyphSet(BaseGlyphSetNumber numbers, BaseGlyphSetNumber hex, BaseGlyphSetNumber gematria, Boolean reverseScript) {
		BBC.PUT_OBJ(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.NUMBERS, numbers);
		BBC.PUT_OBJ(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.HEXIMALS, hex);
		BBC.PUT_OBJ(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.GEMATRIA, gematria);
		BBC.PUT_OBJ(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.REVERSE_SCRIPT, reverseScript); // TODO: ImGui workaround
		BBC.BOON_INIT(this);
		this.B»ç≈ënJmxInit(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.JMX);
		printNumber10Count = B»ç≈ënJmxInitGuageCounter(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.JMX, "printNumber10Count");
		printNumber16Count = B»ç≈ënJmxInitGuageCounter(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.JMX, "printNumber16Count");
		printNumber27Count = B»ç≈ënJmxInitGuageCounter(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.JMX, "printNumber27Count");
	}
	
	public BaseGlyphSetNumber B»ç≈ënNumber10() {
		return GET_BBC().GET_OBJ(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.NUMBERS, BaseGlyphSetNumber.class);
	}
	
	public BaseGlyphSetNumber B»ç≈ënNumber16() {
		return GET_BBC().GET_OBJ(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.HEXIMALS, BaseGlyphSetNumber.class);
	}
	
	public BaseGlyphSetNumber B»ç≈ënNumber27() {
		return GET_BBC().GET_OBJ(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.GEMATRIA, BaseGlyphSetNumber.class);
	}
	
	public Boolean B»ç≈ënReverseScript() {
		return GET_BBC().GET_BOOL(B√£√üB»ç≈ënGlyphSetKey ∏·¥∞.REVERSE_SCRIPT);
	}
	
	public String B»ç≈ënConvertTo(String numbers) {
		StringBuilder buf = new StringBuilder();
		for (char c:numbers.toCharArray()) {
			for (BaseGlyphSet set:values()) {
				int loc = set.B»ç≈ënNumber10().B»ç≈ënIndexOf(""+c);
				if (loc != -1) {
					buf.append(set.B»ç≈ënNumber10().B»ç≈ënCharFor(loc));
				}
			}
		}
		return buf.toString();
	}
	
	public String B»ç≈ënPrintNumber10(int number, int numberMax) {
		printNumber10Count.increment();
		String maxDigitNumber = Integer.toString(numberMax);
		StringBuilder maxDigitFormat = new StringBuilder();
		for (int i=0;i<maxDigitNumber.length();i++) {
			maxDigitFormat.append("0");
		}
		String numberStr = new DecimalFormat(maxDigitFormat.toString()).format(number);
		StringBuilder buf = new StringBuilder();
		for (int i=0;i<numberStr.length();i++) {
			char c = numberStr.charAt(i);
			int numberDigit = c - '0';
			buf.append(B»ç≈ënNumber10().B»ç≈ënCharFor(numberDigit));
			if (i<numberStr.length() - 1) {
				buf.append(B»ç≈ënNumber10().B»ç≈ënCharSeperator());
			}
		}
		if (B»ç≈ënReverseScript()) {
			return buf.reverse().toString();
		}
		return buf.toString();
	}
	
	public String B»ç≈ënPrintNumber16(int number, int numberMax) {
		printNumber16Count.increment();
		String maxDigitNumber = Integer.toHexString(numberMax);
		String numberStr = Integer.toHexString(number);
		StringBuilder buf = new StringBuilder();
		BaseGlyphSet printSet = this;
		for (int i=numberStr.length();i<maxDigitNumber.length();i++) {
			buf.append(printSet.B»ç≈ënNumber16().B»ç≈ënCharFor(0));
			if (i==numberStr.length() && B»ç≈ënNumber16().B»ç≈ënAltGlyphSet() != null) {
				printSet = B»ç≈ënNumber16().B»ç≈ënAltGlyphSet();
			}
		}
		for (int i=0;i<numberStr.length();i++) {
			char c = numberStr.charAt(i);
			int numberDigit = 0;
			if (c >= 'a') {
				numberDigit = c - 'a' + 10;
			} else {
				numberDigit = c - '0';
			}
			buf.append(printSet.B»ç≈ënNumber16().B»ç≈ënCharFor(numberDigit));
			if (i<numberStr.length() - 1) {
				buf.append(printSet.B»ç≈ënNumber16().B»ç≈ënCharSeperator());
			}
			if (i==0 && B»ç≈ënNumber16().B»ç≈ënAltGlyphSet() != null) {
				printSet = B»ç≈ënNumber16().B»ç≈ënAltGlyphSet();
			}
		}
		if (B»ç≈ënReverseScript()) {
			return buf.reverse().toString();
		}
		return buf.toString();
	}
	
	public String B»ç≈ënPrintNumber27(int number, int numberMax) {
		printNumber27Count.increment();
		String maxDigitNumber = Integer.toString(numberMax, 27);
		String numberStr = Integer.toString(number, 27);
		StringBuilder buf = new StringBuilder();
		BaseGlyphSet printSet = this;
		for (int i=numberStr.length();i<maxDigitNumber.length();i++) {
			buf.append(printSet.B»ç≈ënNumber27().B»ç≈ënCharFor(0));
			if (i==numberStr.length() && B»ç≈ënNumber27().B»ç≈ënAltGlyphSet() != null) {
				printSet = B»ç≈ënNumber27().B»ç≈ënAltGlyphSet();
			}
		}
		for (int i=0;i<numberStr.length();i++) {
			char c = numberStr.charAt(i);
			int numberDigit = 0;
			if (c >= 'a') {
				numberDigit = c - 'a' + 10;
			} else {
				numberDigit = c - '0';
			}
			buf.append(printSet.B»ç≈ënNumber27().B»ç≈ënCharFor(numberDigit));
			if (i<numberStr.length() - 1) {
				buf.append(printSet.B»ç≈ënNumber27().B»ç≈ënCharSeperator());
			}
			if (i==0 && B»ç≈ënNumber27().B»ç≈ënAltGlyphSet() != null) {
				printSet = B»ç≈ënNumber27().B»ç≈ënAltGlyphSet();
			}
		}
		if (B»ç≈ënReverseScript()) {
			return buf.reverse().toString();
		}
		return buf.toString();
	}
}
